import groovy.json.JsonSlurper

def model = new JsonSlurper().parse(new File(project.getProjectDir().parent + File.separator + "package.json"))
def doricSDKVersion = model.peerDependencies.doric.replace("^", "").replace(">=","")

println("Doric Version:" + doricSDKVersion)

buildscript {
    repositories {
        mavenCentral()
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.3'
    }
}

rootProject.allprojects {
    repositories {
        mavenCentral()
        google()
        jcenter()
    }
}

apply plugin: 'com.android.library'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"
    sourceSets {
        main.assets.srcDirs += "../dist"
    }
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        externalNativeBuild {
            cmake {
                cppFlags "-fPIC"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
        }
    }
}

dependencies {

    implementation 'com.facebook.soloader:soloader:0.10.1'

    api 'com.github.penfeizhou:jsc4a:0.3.5'
    api "pub.doric:core:${doricSDKVersion}"
}

def version = new File(project.getProjectDir().parent + "/version").text.trim()
println("Publish version:" + version)

ext {
    Version = version
}

def script = project.getProjectDir().parent + "/scripts/upload.gradle"
if (new File(script).exists()) {
    apply from: rootProject.file(script)
}